//------------------------------------------------------------------------------
// <auto-generated>This code was generated by LLBLGen Pro v5.4.</auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace AqarPress.Edit.Persistence
{
	/// <summary>Static class for (extension) methods for fetching and projecting instances of AqarPress.Edit.DtoClasses.User from / to the entity model.</summary>
	public static partial class UserPersistence
	{
		private static readonly System.Linq.Expressions.Expression<Func<AqarPress.Data.EntityClasses.UserEntity, AqarPress.Edit.DtoClasses.User>> _projectorExpression = CreateProjectionFunc();
		private static readonly Func<AqarPress.Data.EntityClasses.UserEntity, AqarPress.Edit.DtoClasses.User> _compiledProjector = CreateProjectionFunc().Compile();
	
		/// <summary>Empty static ctor for triggering initialization of static members in a thread-safe manner</summary>
		static UserPersistence() { }
	
		/// <summary>Extension method which produces a projection to AqarPress.Edit.DtoClasses.User which instances are projected from the 
		/// results of the specified baseQuery, which returns AqarPress.Data.EntityClasses.UserEntity instances, the root entity of the derived element returned by this query.</summary>
		/// <param name="baseQuery">The base query to project the derived element instances from.</param>
		/// <returns>IQueryable to retrieve AqarPress.Edit.DtoClasses.User instances</returns>
		public static IQueryable<AqarPress.Edit.DtoClasses.User> ProjectToUser(this IQueryable<AqarPress.Data.EntityClasses.UserEntity> baseQuery)
		{
			return baseQuery.Select(_projectorExpression);
		}
		
		/// <summary>Extension method which produces a projection to AqarPress.Edit.DtoClasses.User which instances are projected from the
		/// AqarPress.Data.EntityClasses.UserEntity entity instance specified, the root entity of the derived element returned by this method.</summary>
		/// <param name="entity">The entity to project from.</param>
		/// <returns>AqarPress.Data.EntityClasses.UserEntity instance created from the specified entity instance</returns>
		public static AqarPress.Edit.DtoClasses.User ProjectToUser(this AqarPress.Data.EntityClasses.UserEntity entity)
		{
			return _compiledProjector(entity);
		}
		
		private static System.Linq.Expressions.Expression<Func<AqarPress.Data.EntityClasses.UserEntity, AqarPress.Edit.DtoClasses.User>> CreateProjectionFunc()
		{
			return p__0 => new AqarPress.Edit.DtoClasses.User()
			{
				DeviceToken = p__0.DeviceToken,
				Id = p__0.Id,
				LastLoginDate = p__0.LastLoginDate,
				MobilePhone = p__0.MobilePhone,
				Name = p__0.Name,
				Password = p__0.Password,
				RoleId = p__0.RoleId,
	// __LLBLGENPRO_USER_CODE_REGION_START ProjectionRegion_User 
	// __LLBLGENPRO_USER_CODE_REGION_END 
			};
		}
		/// <summary>Creates a primary key predicate to be used in a Where() clause in a Linq query which is executed on the database to fetch the original entity instance the specified <see cref="dto"/> object was projected from.</summary>
		/// <param name="dto">The dto object for which the primary key predicate has to be created for.</param>
		/// <returns>ready to use expression</returns>
		public static System.Linq.Expressions.Expression<Func<AqarPress.Data.EntityClasses.UserEntity, bool>> CreatePkPredicate(AqarPress.Edit.DtoClasses.User dto)
		{
			return p__0 => p__0.Id == dto.Id;
		}

		/// <summary>Creates a primary key predicate to be used in a Where() clause in a Linq query which is executed on the database to fetch the original entity instances the specified set of <see cref="dtos"/> objects was projected from.</summary>
		/// <param name="dtos">The dto objects for which the primary key predicate has to be created for.</param>
		/// <returns>ready to use expression</returns>
		public static System.Linq.Expressions.Expression<Func<AqarPress.Data.EntityClasses.UserEntity, bool>> CreatePkPredicate(IEnumerable<AqarPress.Edit.DtoClasses.User> dtos)
		{
			return p__0 => dtos.Select(p__1=>p__1.Id).ToList().Contains(p__0.Id);
		}

		/// <summary>Creates a primary key predicate to be used in a Where() clause in a Linq query on an IEnumerable in-memory set of entity instances to retrieve the original entity instance the specified <see cref="dto"/> object was projected from.</summary>
		/// <param name="dto">The dto object for which the primary key predicate has to be created for.</param>
		/// <returns>ready to use func</returns>
		public static Func<AqarPress.Data.EntityClasses.UserEntity, bool> CreateInMemoryPkPredicate(AqarPress.Edit.DtoClasses.User dto)
		{
			return p__0 => p__0.Id == dto.Id;
		}
		
		/// <summary>Updates the specified AqarPress.Data.EntityClasses.UserEntity entity with the values stored in the dto object specified</summary>
		/// <param name="toUpdate">the entity instance to update.</param>
		/// <param name="dto">The dto object containing the source values.</param>
		/// <remarks>The PK field of toUpdate is set only if it's not marked as readonly.</remarks>
		public static void UpdateFromUser(this AqarPress.Data.EntityClasses.UserEntity toUpdate, AqarPress.Edit.DtoClasses.User dto)
		{
			if((toUpdate == null) || (dto == null))
			{
				return;
			}
			toUpdate.DeviceToken = dto.DeviceToken;
			toUpdate.Id = dto.Id;
			toUpdate.LastLoginDate = dto.LastLoginDate;
			toUpdate.MobilePhone = dto.MobilePhone;
			toUpdate.Name = dto.Name;
			toUpdate.Password = dto.Password;
			toUpdate.RoleId = dto.RoleId;
		}
	}
}

 