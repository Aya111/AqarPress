//////////////////////////////////////////////////////////////
// <auto-generated>This code was generated by LLBLGen Pro 5.5.</auto-generated>
//////////////////////////////////////////////////////////////
// Code is generated on: 
// Code is generated using templates: SD.TemplateBindings.SharedTemplates
// Templates vendor: Solutions Design.
//////////////////////////////////////////////////////////////
using System;
using System.ComponentModel;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using DB_A4D6F8_AqarPress.Data.HelperClasses;
using DB_A4D6F8_AqarPress.Data.FactoryClasses;
using DB_A4D6F8_AqarPress.Data.RelationClasses;

using SD.LLBLGen.Pro.ORMSupportClasses;

namespace DB_A4D6F8_AqarPress.Data.EntityClasses
{
	// __LLBLGENPRO_USER_CODE_REGION_START AdditionalNamespaces
	// __LLBLGENPRO_USER_CODE_REGION_END
	/// <summary>Entity class which represents the entity 'SubCategory'.<br/><br/></summary>
	[Serializable]
	public partial class SubCategoryEntity : CommonEntityBase
		// __LLBLGENPRO_USER_CODE_REGION_START AdditionalInterfaces
		// __LLBLGENPRO_USER_CODE_REGION_END	
	{
		private EntityCollection<ProjectSubCategoryTableEntity> _projectSubCategoryTables;

		// __LLBLGENPRO_USER_CODE_REGION_START PrivateMembers
		// __LLBLGENPRO_USER_CODE_REGION_END
		private static SubCategoryEntityStaticMetaData _staticMetaData = new SubCategoryEntityStaticMetaData();
		private static SubCategoryRelations _relationsFactory = new SubCategoryRelations();

		/// <summary>All names of fields mapped onto a relation. Usable for in-memory filtering</summary>
		public static partial class MemberNames
		{
			/// <summary>Member name ProjectSubCategoryTables</summary>
			public static readonly string ProjectSubCategoryTables = "ProjectSubCategoryTables";
		}

		/// <summary>Static meta-data storage for navigator related information</summary>
		protected class SubCategoryEntityStaticMetaData : EntityStaticMetaDataBase
		{
			public SubCategoryEntityStaticMetaData()
			{
				SetEntityCoreInfo("SubCategoryEntity", InheritanceHierarchyType.None, false, (int)DB_A4D6F8_AqarPress.Data.EntityType.SubCategoryEntity, typeof(SubCategoryEntity), typeof(SubCategoryEntityFactory), false);
				AddNavigatorMetaData<SubCategoryEntity, EntityCollection<ProjectSubCategoryTableEntity>>("ProjectSubCategoryTables", a => a._projectSubCategoryTables, (a, b) => a._projectSubCategoryTables = b, a => a.ProjectSubCategoryTables, () => new SubCategoryRelations().ProjectSubCategoryTableEntityUsingSubCategoryId, typeof(ProjectSubCategoryTableEntity), (int)DB_A4D6F8_AqarPress.Data.EntityType.ProjectSubCategoryTableEntity);
			}
		}

		/// <summary>Static ctor</summary>
		static SubCategoryEntity()
		{
		}

		/// <summary> CTor</summary>
		public SubCategoryEntity()
		{
			InitClassEmpty(null, null);
		}

		/// <summary> CTor</summary>
		/// <param name="fields">Fields object to set as the fields for this entity.</param>
		public SubCategoryEntity(IEntityFields2 fields)
		{
			InitClassEmpty(null, fields);
		}

		/// <summary> CTor</summary>
		/// <param name="validator">The custom validator object for this SubCategoryEntity</param>
		public SubCategoryEntity(IValidator validator)
		{
			InitClassEmpty(validator, null);
		}

		/// <summary> CTor</summary>
		/// <param name="id">PK value for SubCategory which data should be fetched into this SubCategory object</param>
		public SubCategoryEntity(System.Int32 id) : this(id, null)
		{
		}

		/// <summary> CTor</summary>
		/// <param name="id">PK value for SubCategory which data should be fetched into this SubCategory object</param>
		/// <param name="validator">The custom validator object for this SubCategoryEntity</param>
		public SubCategoryEntity(System.Int32 id, IValidator validator)
		{
			InitClassEmpty(validator, null);
			this.Id = id;
		}

		/// <summary>Private CTor for deserialization</summary>
		/// <param name="info"></param>
		/// <param name="context"></param>
		protected SubCategoryEntity(SerializationInfo info, StreamingContext context) : base(info, context)
		{
			// __LLBLGENPRO_USER_CODE_REGION_START DeserializationConstructor
			// __LLBLGENPRO_USER_CODE_REGION_END
		}

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'ProjectSubCategoryTable' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoProjectSubCategoryTables() { return CreateRelationInfoForNavigator("ProjectSubCategoryTables"); }
		
		/// <inheritdoc/>
		protected override EntityStaticMetaDataBase GetEntityStaticMetaData() {	return _staticMetaData; }

		/// <summary>Initializes the class members</summary>
		private void InitClassMembers()
		{
			PerformDependencyInjection();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassMembers
			// __LLBLGENPRO_USER_CODE_REGION_END
			OnInitClassMembersComplete();
		}

		/// <summary>Initializes the class with empty data, as if it is a new Entity.</summary>
		/// <param name="validator">The validator object for this SubCategoryEntity</param>
		/// <param name="fields">Fields of this entity</param>
		private void InitClassEmpty(IValidator validator, IEntityFields2 fields)
		{
			OnInitializing();
			this.Fields = fields ?? CreateFields();
			this.Validator = validator;
			InitClassMembers();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassEmpty
			// __LLBLGENPRO_USER_CODE_REGION_END

			OnInitialized();
		}

		/// <summary>The relations object holding all relations of this entity with other entity classes.</summary>
		public static SubCategoryRelations Relations { get { return _relationsFactory; } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ProjectSubCategoryTable' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathProjectSubCategoryTables { get { return _staticMetaData.GetPrefetchPathElement("ProjectSubCategoryTables", CommonEntityBase.CreateEntityCollection<ProjectSubCategoryTableEntity>()); } }

		/// <summary>The ArabicName property of the Entity SubCategory<br/><br/></summary>
		/// <remarks>Mapped on  table field: "SubCategory"."arabic_name".<br/>Table field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 500.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.String ArabicName
		{
			get { return (System.String)GetValue((int)SubCategoryFieldIndex.ArabicName, true); }
			set	{ SetValue((int)SubCategoryFieldIndex.ArabicName, value); }
		}

		/// <summary>The Id property of the Entity SubCategory<br/><br/></summary>
		/// <remarks>Mapped on  table field: "SubCategory"."id".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, true, true</remarks>
		public virtual System.Int32 Id
		{
			get { return (System.Int32)GetValue((int)SubCategoryFieldIndex.Id, true); }
			set { SetValue((int)SubCategoryFieldIndex.Id, value); }		}

		/// <summary>The Name property of the Entity SubCategory<br/><br/></summary>
		/// <remarks>Mapped on  table field: "SubCategory"."name".<br/>Table field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 500.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.String Name
		{
			get { return (System.String)GetValue((int)SubCategoryFieldIndex.Name, true); }
			set	{ SetValue((int)SubCategoryFieldIndex.Name, value); }
		}

		/// <summary>Gets the EntityCollection with the related entities of type 'ProjectSubCategoryTableEntity' which are related to this entity via a relation of type '1:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(ProjectSubCategoryTableEntity))]
		public virtual EntityCollection<ProjectSubCategoryTableEntity> ProjectSubCategoryTables { get { return GetOrCreateEntityCollection<ProjectSubCategoryTableEntity, ProjectSubCategoryTableEntityFactory>("SubCategory", true, false, ref _projectSubCategoryTables); } }

		// __LLBLGENPRO_USER_CODE_REGION_START CustomEntityCode
		// __LLBLGENPRO_USER_CODE_REGION_END

	}
}

namespace DB_A4D6F8_AqarPress.Data
{
	public enum SubCategoryFieldIndex
	{
		///<summary>ArabicName. </summary>
		ArabicName,
		///<summary>Id. </summary>
		Id,
		///<summary>Name. </summary>
		Name,
		/// <summary></summary>
		AmountOfFields
	}
}

namespace DB_A4D6F8_AqarPress.Data.RelationClasses
{
	/// <summary>Implements the relations factory for the entity: SubCategory. </summary>
	public partial class SubCategoryRelations: RelationFactory
	{
		/// <summary>Returns a new IEntityRelation object, between SubCategoryEntity and ProjectSubCategoryTableEntity over the 1:n relation they have, using the relation between the fields: SubCategory.Id - ProjectSubCategoryTable.SubCategoryId</summary>
		public virtual IEntityRelation ProjectSubCategoryTableEntityUsingSubCategoryId
		{
			get { return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.OneToMany, "ProjectSubCategoryTables", true, new[] { SubCategoryFields.Id, ProjectSubCategoryTableFields.SubCategoryId }); }
		}

	}
	
	/// <summary>Static class which is used for providing relationship instances which are re-used internally for syncing</summary>
	internal static class StaticSubCategoryRelations
	{
		internal static readonly IEntityRelation ProjectSubCategoryTableEntityUsingSubCategoryIdStatic = new SubCategoryRelations().ProjectSubCategoryTableEntityUsingSubCategoryId;

		/// <summary>CTor</summary>
		static StaticSubCategoryRelations() { }
	}
}
