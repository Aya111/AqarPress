//////////////////////////////////////////////////////////////
// <auto-generated>This code was generated by LLBLGen Pro 5.5.</auto-generated>
//////////////////////////////////////////////////////////////
// Code is generated on: 
// Code is generated using templates: SD.TemplateBindings.SharedTemplates
// Templates vendor: Solutions Design.
//////////////////////////////////////////////////////////////
using System;
using System.ComponentModel;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using DB_A4D6F8_AqarPress.Data.HelperClasses;
using DB_A4D6F8_AqarPress.Data.FactoryClasses;
using DB_A4D6F8_AqarPress.Data.RelationClasses;

using SD.LLBLGen.Pro.ORMSupportClasses;

namespace DB_A4D6F8_AqarPress.Data.EntityClasses
{
	// __LLBLGENPRO_USER_CODE_REGION_START AdditionalNamespaces
	// __LLBLGENPRO_USER_CODE_REGION_END
	/// <summary>Entity class which represents the entity 'ProjectSubCategoryTable'.<br/><br/></summary>
	[Serializable]
	public partial class ProjectSubCategoryTableEntity : CommonEntityBase
		// __LLBLGENPRO_USER_CODE_REGION_START AdditionalInterfaces
		// __LLBLGENPRO_USER_CODE_REGION_END	
	{
		private ProjectEntity _project;
		private SubCategoryEntity _subCategory;

		// __LLBLGENPRO_USER_CODE_REGION_START PrivateMembers
		// __LLBLGENPRO_USER_CODE_REGION_END
		private static ProjectSubCategoryTableEntityStaticMetaData _staticMetaData = new ProjectSubCategoryTableEntityStaticMetaData();
		private static ProjectSubCategoryTableRelations _relationsFactory = new ProjectSubCategoryTableRelations();

		/// <summary>All names of fields mapped onto a relation. Usable for in-memory filtering</summary>
		public static partial class MemberNames
		{
			/// <summary>Member name Project</summary>
			public static readonly string Project = "Project";
			/// <summary>Member name SubCategory</summary>
			public static readonly string SubCategory = "SubCategory";
		}

		/// <summary>Static meta-data storage for navigator related information</summary>
		protected class ProjectSubCategoryTableEntityStaticMetaData : EntityStaticMetaDataBase
		{
			public ProjectSubCategoryTableEntityStaticMetaData()
			{
				SetEntityCoreInfo("ProjectSubCategoryTableEntity", InheritanceHierarchyType.None, false, (int)DB_A4D6F8_AqarPress.Data.EntityType.ProjectSubCategoryTableEntity, typeof(ProjectSubCategoryTableEntity), typeof(ProjectSubCategoryTableEntityFactory), false);
				AddNavigatorMetaData<ProjectSubCategoryTableEntity, ProjectEntity>("Project", "ProjectSubCategoryTables", (a, b) => a._project = b, a => a._project, (a, b) => a.Project = b, DB_A4D6F8_AqarPress.Data.RelationClasses.StaticProjectSubCategoryTableRelations.ProjectEntityUsingProjectIdStatic, ()=>new ProjectSubCategoryTableRelations().ProjectEntityUsingProjectId, null, new int[] { (int)ProjectSubCategoryTableFieldIndex.ProjectId }, null, true, (int)DB_A4D6F8_AqarPress.Data.EntityType.ProjectEntity);
				AddNavigatorMetaData<ProjectSubCategoryTableEntity, SubCategoryEntity>("SubCategory", "ProjectSubCategoryTables", (a, b) => a._subCategory = b, a => a._subCategory, (a, b) => a.SubCategory = b, DB_A4D6F8_AqarPress.Data.RelationClasses.StaticProjectSubCategoryTableRelations.SubCategoryEntityUsingSubCategoryIdStatic, ()=>new ProjectSubCategoryTableRelations().SubCategoryEntityUsingSubCategoryId, null, new int[] { (int)ProjectSubCategoryTableFieldIndex.SubCategoryId }, null, true, (int)DB_A4D6F8_AqarPress.Data.EntityType.SubCategoryEntity);
			}
		}

		/// <summary>Static ctor</summary>
		static ProjectSubCategoryTableEntity()
		{
		}

		/// <summary> CTor</summary>
		public ProjectSubCategoryTableEntity()
		{
			InitClassEmpty(null, null);
		}

		/// <summary> CTor</summary>
		/// <param name="fields">Fields object to set as the fields for this entity.</param>
		public ProjectSubCategoryTableEntity(IEntityFields2 fields)
		{
			InitClassEmpty(null, fields);
		}

		/// <summary> CTor</summary>
		/// <param name="validator">The custom validator object for this ProjectSubCategoryTableEntity</param>
		public ProjectSubCategoryTableEntity(IValidator validator)
		{
			InitClassEmpty(validator, null);
		}

		/// <summary> CTor</summary>
		/// <param name="id">PK value for ProjectSubCategoryTable which data should be fetched into this ProjectSubCategoryTable object</param>
		public ProjectSubCategoryTableEntity(System.Int32 id) : this(id, null)
		{
		}

		/// <summary> CTor</summary>
		/// <param name="id">PK value for ProjectSubCategoryTable which data should be fetched into this ProjectSubCategoryTable object</param>
		/// <param name="validator">The custom validator object for this ProjectSubCategoryTableEntity</param>
		public ProjectSubCategoryTableEntity(System.Int32 id, IValidator validator)
		{
			InitClassEmpty(validator, null);
			this.Id = id;
		}

		/// <summary>Private CTor for deserialization</summary>
		/// <param name="info"></param>
		/// <param name="context"></param>
		protected ProjectSubCategoryTableEntity(SerializationInfo info, StreamingContext context) : base(info, context)
		{
			// __LLBLGENPRO_USER_CODE_REGION_START DeserializationConstructor
			// __LLBLGENPRO_USER_CODE_REGION_END
		}

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'Project' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoProject() { return CreateRelationInfoForNavigator("Project"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'SubCategory' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoSubCategory() { return CreateRelationInfoForNavigator("SubCategory"); }
		
		/// <inheritdoc/>
		protected override EntityStaticMetaDataBase GetEntityStaticMetaData() {	return _staticMetaData; }

		/// <summary>Initializes the class members</summary>
		private void InitClassMembers()
		{
			PerformDependencyInjection();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassMembers
			// __LLBLGENPRO_USER_CODE_REGION_END
			OnInitClassMembersComplete();
		}

		/// <summary>Initializes the class with empty data, as if it is a new Entity.</summary>
		/// <param name="validator">The validator object for this ProjectSubCategoryTableEntity</param>
		/// <param name="fields">Fields of this entity</param>
		private void InitClassEmpty(IValidator validator, IEntityFields2 fields)
		{
			OnInitializing();
			this.Fields = fields ?? CreateFields();
			this.Validator = validator;
			InitClassMembers();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassEmpty
			// __LLBLGENPRO_USER_CODE_REGION_END

			OnInitialized();
		}

		/// <summary>The relations object holding all relations of this entity with other entity classes.</summary>
		public static ProjectSubCategoryTableRelations Relations { get { return _relationsFactory; } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Project' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathProject { get { return _staticMetaData.GetPrefetchPathElement("Project", CommonEntityBase.CreateEntityCollection<ProjectEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'SubCategory' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathSubCategory { get { return _staticMetaData.GetPrefetchPathElement("SubCategory", CommonEntityBase.CreateEntityCollection<SubCategoryEntity>()); } }

		/// <summary>The Id property of the Entity ProjectSubCategoryTable<br/><br/></summary>
		/// <remarks>Mapped on  table field: "ProjectSubCategoryTable"."id".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, true, true</remarks>
		public virtual System.Int32 Id
		{
			get { return (System.Int32)GetValue((int)ProjectSubCategoryTableFieldIndex.Id, true); }
			set { SetValue((int)ProjectSubCategoryTableFieldIndex.Id, value); }		}

		/// <summary>The ProjectId property of the Entity ProjectSubCategoryTable<br/><br/></summary>
		/// <remarks>Mapped on  table field: "ProjectSubCategoryTable"."project_id".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Int32 ProjectId
		{
			get { return (System.Int32)GetValue((int)ProjectSubCategoryTableFieldIndex.ProjectId, true); }
			set	{ SetValue((int)ProjectSubCategoryTableFieldIndex.ProjectId, value); }
		}

		/// <summary>The SubCategoryId property of the Entity ProjectSubCategoryTable<br/><br/></summary>
		/// <remarks>Mapped on  table field: "ProjectSubCategoryTable"."sub_category_id".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Int32 SubCategoryId
		{
			get { return (System.Int32)GetValue((int)ProjectSubCategoryTableFieldIndex.SubCategoryId, true); }
			set	{ SetValue((int)ProjectSubCategoryTableFieldIndex.SubCategoryId, value); }
		}

		/// <summary>Gets / sets related entity of type 'ProjectEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual ProjectEntity Project
		{
			get { return _project; }
			set { SetSingleRelatedEntityNavigator(value, "Project"); }
		}

		/// <summary>Gets / sets related entity of type 'SubCategoryEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual SubCategoryEntity SubCategory
		{
			get { return _subCategory; }
			set { SetSingleRelatedEntityNavigator(value, "SubCategory"); }
		}

		// __LLBLGENPRO_USER_CODE_REGION_START CustomEntityCode
		// __LLBLGENPRO_USER_CODE_REGION_END

	}
}

namespace DB_A4D6F8_AqarPress.Data
{
	public enum ProjectSubCategoryTableFieldIndex
	{
		///<summary>Id. </summary>
		Id,
		///<summary>ProjectId. </summary>
		ProjectId,
		///<summary>SubCategoryId. </summary>
		SubCategoryId,
		/// <summary></summary>
		AmountOfFields
	}
}

namespace DB_A4D6F8_AqarPress.Data.RelationClasses
{
	/// <summary>Implements the relations factory for the entity: ProjectSubCategoryTable. </summary>
	public partial class ProjectSubCategoryTableRelations: RelationFactory
	{

		/// <summary>Returns a new IEntityRelation object, between ProjectSubCategoryTableEntity and ProjectEntity over the m:1 relation they have, using the relation between the fields: ProjectSubCategoryTable.ProjectId - Project.Id</summary>
		public virtual IEntityRelation ProjectEntityUsingProjectId
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "Project", false, new[] { ProjectFields.Id, ProjectSubCategoryTableFields.ProjectId }); }
		}

		/// <summary>Returns a new IEntityRelation object, between ProjectSubCategoryTableEntity and SubCategoryEntity over the m:1 relation they have, using the relation between the fields: ProjectSubCategoryTable.SubCategoryId - SubCategory.Id</summary>
		public virtual IEntityRelation SubCategoryEntityUsingSubCategoryId
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "SubCategory", false, new[] { SubCategoryFields.Id, ProjectSubCategoryTableFields.SubCategoryId }); }
		}

	}
	
	/// <summary>Static class which is used for providing relationship instances which are re-used internally for syncing</summary>
	internal static class StaticProjectSubCategoryTableRelations
	{
		internal static readonly IEntityRelation ProjectEntityUsingProjectIdStatic = new ProjectSubCategoryTableRelations().ProjectEntityUsingProjectId;
		internal static readonly IEntityRelation SubCategoryEntityUsingSubCategoryIdStatic = new ProjectSubCategoryTableRelations().SubCategoryEntityUsingSubCategoryId;

		/// <summary>CTor</summary>
		static StaticProjectSubCategoryTableRelations() { }
	}
}
